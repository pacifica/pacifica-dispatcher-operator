---
- name: Debug Combined env
  debug:
    msg: "{{ env+__int_env }}"
  when: debug
- name: Debug Combination init containers
  debug:
    msg: "{{ __init_containers+setup_init_containers }}"
  when: debug
- name: Define Pacifica Dispatcher Frontend
  k8s:
    definition:
      kind: StatefulSet
      apiVersion: apps/v1
      metadata:
        name: '{{ meta.name }}-dispatcher'
        namespace: '{{ meta.namespace }}'
      spec:
        replicas: "{{ size }}"
        selector:
          matchLabels:
            app: "dispatcher"
        template:
          metadata:
            labels:
              app: "dispatcher"
          spec:
            containers:
              - name: "dispatcher"
                image: "{{ image }}"
                env: "{{ _pacifica_dispatcher_io_pacificadispatcher_spec.env | default([]) }}"
                command: "{{ command }}"
                volumeMounts:
                  - name: shareddata
                    mountPath: /data
                ports:
                  - containerPort: 8069
                readinessProbe:
                  httpGet:
                    path: "/"
                    port: 8069
                  initialDelaySeconds: 5
                  periodSeconds: 5
            initContainers: "{{ __init_containers+setup_init_containers }}"
            volumes:
              - name: shareddata
                persistentVolumeClaim:
                  claimName: "{{ shared_pvc }}"
- name: Get Notifications Secret
  k8s_info:
    api_version: v1
    kind: Secret
    name: "{{ secret_name }}"
    namespace: "{{ meta.namespace }}"
  register: secret_result
- name: Notification Subscription Basic Auth
  block:
    - name: Check Subscription
      uri:
        url: "{{ secret_result.resources[0][secret_url_key] }}/{{ secret_name }}"
        password: "{{ secret_result.resources[0][secret_auth_basic_pass_key] }}"
        user: "{{ secret_result.resources[0][secret_auth_basic_user_key] }}"
      register: subscription_result
    - name: Create Subscription
      uri:
        url: "{{ secret_result.resources[0][secret_url_key] }}/{{ secret_name }}"
        password: "{{ secret_result.resources[0][secret_auth_basic_pass_key] }}"
        user: "{{ secret_result.resources[0][secret_auth_basic_user_key] }}"
        method: POST
        body: "{{ subscription | to_json }}"
        force_basic_auth: yes
        status_code: 201
        body_format: json
      when: "subscription_result.status != 200"
  when: "secret_result.resources[0][secret_auth_type_key] == 'basic'"
